AWSTemplateFormatVersion: 2010-09-09
Parameters:
  ServiceName:
    Type: String
    Default: SmartThingsLogger
    Description: Name of the service - Used in all resources
  GitHubUser:
    Type: String
    Description: GitHub UserName. This username must have access to the GitHubToken
    Default: brwyatt
  GitHubRepoName:
    Type: String
    Description: The GitHub repo name
    Default: smartthings_logging
  GitHubRepoBranch:
    Type: String
    Description: The GitHub repo branch code pipelines should watch for changes on
    Default: master
  GitHubToken:
    NoEcho: true
    Type: String
    Description: "Secret. OAuthToken with access to Repo. Long string of characters and digits. Go to https://github.com/settings/tokens"
  SmartThingsConfigSecretName:
    Type: String
    Default: 'SmartThingsConfig'
    Description: 'Name of the Config secret in AWS Secrets Manager'
  SmartThingsMetricNamespace:
    Type: String
    Default: 'SmartThings'
    Description: 'Metric Namespace for Metric Filters'
Resources:
  # CodeBuild project and resources (S3 Bucket for build artifacts, Role, Project)
  BuildArtifactsBucket:
    Type: AWS::S3::Bucket
  CodeBuildLogGroup:
    # Basically want to set expiration of logs for the Lambda function
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/codebuild/${CodeBuildProject}'
      RetentionInDays: 14 # 2 weeks
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codebuild.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CodeBuildAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ServiceName}_Build'
                  - !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/${ServiceName}_Build:*'
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
              - Effect: Allow
                Resource:
                  - !Sub 'arn:aws:s3:::${BuildArtifactsBucket}/*'
                Action:
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:PutObject'
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Sub '${ServiceName}_Build'
      Description: !Sub 'Build project for the ${ServiceName} service'
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/python:3.7.1
        EnvironmentVariables:
          - Name: BUILD_OUTPUT_BUCKET
            Value: !Ref BuildArtifactsBucket
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Source:
        Type: CODEPIPELINE
 
  # CodePipeline definition and required roles
  CFNPipelinePolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      Description: CloudFormation Pipeline Execution Policy
      Path: "/"
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          Effect: Allow
          Action:
            - 'cloudformation:CreateStack'
            - 'cloudformation:DescribeStacks'
            - 'cloudformation:DeleteStack'
            - 'cloudformation:UpdateStack'
            - 'cloudformation:CreateChangeSet'
            - 'cloudformation:ExecuteChangeSet'
            - 'cloudformation:DeleteChangeSet'
            - 'cloudformation:DescribeChangeSet'
            - 'cloudformation:SetStackPolicy'
            - 'cloudformation:SetStackPolicy'
            - 'cloudformation:ValidateTemplate'
            - 'codebuild:StartBuild'
            - 'codebuild:BatchGetBuilds'
          Resource: "*"
  CloudFormationExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action:
            - 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service:
              - cloudformation.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AdministratorAccess'
  PipelineExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Action:
              - 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service:
                - codepipeline.amazonaws.com
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3FullAccess'
        - !Ref CFNPipelinePolicy
      Policies:
        - PolicyName: CodePipelineAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Action:
                  - 'iam:PassRole'
                  - 'lambda:InvokeFunction'
                  - 'lambda:ListFunctions'
                  - 'lambda:InvokeAsyc'
                Effect: Allow
                Resource: '*'
  Pipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      ArtifactStore:
        Location: !Ref BuildArtifactsBucket
        Type: S3
      Name: !Sub ${ServiceName}_Pipeline
      RoleArn: !GetAtt PipelineExecutionRole.Arn
      Stages:
        - Name: Source
          Actions:
            - Name: GitHubRepo
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              Configuration:
                Owner: !Ref GitHubUser
                Repo: !Ref GitHubRepoName
                Branch: !Ref GitHubRepoBranch
                OAuthToken: !Ref GitHubToken
              OutputArtifacts:
                - Name: SourceZip
              RunOrder: 1
        - Name: Build
          Actions:
            - Name: CodeBuild
              ActionTypeId:
                Category: Build
                Owner: AWS
                Provider: CodeBuild
                Version: 1
              Configuration:
                ProjectName: !Ref CodeBuildProject
              InputArtifacts:
                - Name: SourceZip
              OutputArtifacts:
                - Name: BuiltZip
        - Name: Deploy
          Actions:
            - Name: CreateChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_REPLACE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub '${ServiceName}-Application'
                ChangeSetName: !Sub '${ServiceName}-Application-ChangeSet'
                TemplatePath: BuiltZip::app-output_sam.yaml
                Capabilities: CAPABILITY_IAM
                ParameterOverrides: !Sub '{ "SmartThingsConfigSecretName": "${SmartThingsConfigSecretName}", "SmartThingsMetricNamespace": "${SmartThingsMetricNamespace}" }'
              InputArtifacts:
                - Name: BuiltZip
              RunOrder: 1
            - Name: ExecuteChangeSet
              ActionTypeId:
                Category: Deploy
                Owner: AWS
                Provider: CloudFormation
                Version: 1
              Configuration:
                ActionMode: CHANGE_SET_EXECUTE
                RoleArn: !GetAtt CloudFormationExecutionRole.Arn
                StackName: !Sub '${ServiceName}-Application'
                ChangeSetName: !Sub '${ServiceName}-Application-ChangeSet'
              OutputArtifacts:
                - Name: !Sub '${ServiceName}ApplicationChangeSet'
              RunOrder: 2

# vim: ts=2 sts=2 sw=2 expandtab
